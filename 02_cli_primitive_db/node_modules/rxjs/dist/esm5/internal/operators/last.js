import { EmptyError } from 'rxjs/dist/cjs/internal/util/EmptyError';
import { filter } from 'rxjs/dist/cjs/internal/operators/filter';
import { takeLast } from 'rxjs/dist/cjs/internal/operators/takeLast';
import { throwIfEmpty } from 'rxjs/dist/cjs/internal/operators/throwIfEmpty';
import { defaultIfEmpty } from 'rxjs/dist/cjs/internal/operators/defaultIfEmpty';
import { identity } from 'rxjs/dist/cjs/internal/util/identity';
export function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); }));
    };
}
//# sourceMappingURL=last.js.map