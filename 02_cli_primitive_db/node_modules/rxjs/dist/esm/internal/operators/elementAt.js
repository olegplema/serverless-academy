import { ArgumentOutOfRangeError } from 'rxjs/dist/esm/internal/util/ArgumentOutOfRangeError';
import { filter } from 'rxjs/dist/esm/internal/operators/filter';
import { throwIfEmpty } from 'rxjs/dist/esm/internal/operators/throwIfEmpty';
import { defaultIfEmpty } from 'rxjs/dist/esm/internal/operators/defaultIfEmpty';
import { take } from 'rxjs/dist/esm/internal/operators/take';
export function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new ArgumentOutOfRangeError();
    }
    const hasDefaultValue = arguments.length >= 2;
    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new ArgumentOutOfRangeError()));
}
//# sourceMappingURL=elementAt.js.map