import { combineLatestInit } from 'rxjs/dist/esm/internal/observable/combineLatest';
import { operate } from 'rxjs/dist/esm/internal/util/lift';
import { argsOrArgArray } from 'rxjs/dist/esm/internal/util/argsOrArgArray';
import { mapOneOrManyArgs } from 'rxjs/dist/esm/internal/util/mapOneOrManyArgs';
import { pipe } from 'rxjs/dist/esm/internal/util/pipe';
import { popResultSelector } from 'rxjs/dist/esm/internal/util/args';
export function combineLatest(...args) {
    const resultSelector = popResultSelector(args);
    return resultSelector
        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))
        : operate((source, subscriber) => {
            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);
        });
}
//# sourceMappingURL=combineLatest.js.map